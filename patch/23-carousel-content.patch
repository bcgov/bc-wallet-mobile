diff --git a/App/screens/OnboardingPages.tsx b/App/screens/OnboardingPages.tsx
index 53b978c..944497b 100644
--- a/App/screens/OnboardingPages.tsx
+++ b/App/screens/OnboardingPages.tsx
@@ -1,21 +1,41 @@
 import React from 'react'
-import { StyleSheet, Text, TouchableHighlight, View } from 'react-native'
+import { StyleSheet, Text, Linking, TouchableOpacity, View, TouchableHighlight } from 'react-native'
 import { SvgProps } from 'react-native-svg'
 import Toast from 'react-native-toast-message'
 
+import { Colors } from '../Theme'
 import CredentialList from '../assets/img/credential-list.svg'
+import Credential from '../assets/img/credential.svg'
+import ExternalLink from '../assets/img/external-link.svg'
+import Info from '../assets/img/info.svg'
+import MobilePhone from '../assets/img/mobile-phone.svg'
 import ScanShare from '../assets/img/scan-share.svg'
+import SecureCredential from '../assets/img/secure-credentials.svg'
 import SecureImage from '../assets/img/secure-image.svg'
-import { Colors, Buttons } from '../theme'
 
 import { OnboardingStyleSheet } from './Onboarding'
 
+import { Button } from 'components'
+import { ButtonType } from 'components/buttons/Button'
+
 const imageDisplayOptions = {
-  fill: Colors.text,
+  fill: Colors.white,
   height: 180,
   width: 180,
 }
 
+const iconDisplayOptions = {
+  fill: Colors.white,
+  height: 30,
+  width: 30,
+}
+
+const smallIconDisplayOptions = {
+  fill: Colors.white,
+  height: 12,
+  width: 12,
+}
+
 export const carousel: OnboardingStyleSheet = StyleSheet.create({
   container: {
     flex: 1,
@@ -72,7 +92,7 @@ const defaultStyle = StyleSheet.create({
   },
 })
 
-const getStartedTouched = async () => {
+const onGetStartedTouched = async () => {
   Toast.show({
     type: 'success',
     text1: 'Not Implemented',
@@ -80,28 +100,58 @@ const getStartedTouched = async () => {
 }
 
 const CustomPageElement = (
+  <>
+    <Text style={[defaultStyle.headerText, { marginLeft: 20, marginRight: 20 }]}>Welcome</Text>
+    <Text style={[defaultStyle.bodyText, { marginLeft: 20, marginTop: 25, marginRight: 20 }]}>
+      BC Wallet is a digital wallet that lets you store information about yourself and use it to share in-person and
+      online easily and securely.
+    </Text>
+
+    <View style={[defaultStyle.point, { marginTop: 30 }]}>
+      <Credential {...iconDisplayOptions} style={defaultStyle.icon} />
+      <Text style={[defaultStyle.bodyText]}>Add digital cards and documents to your BC Wallet.</Text>
+    </View>
+
+    <View style={[defaultStyle.point]}>
+      <SecureCredential {...iconDisplayOptions} style={defaultStyle.icon} />
+      <Text style={[defaultStyle.bodyText]}>Need to show ID? Share only what you need to.</Text>
+    </View>
+
+    <View style={[defaultStyle.point]}>
+      <MobilePhone {...iconDisplayOptions} style={defaultStyle.icon} />
+      <Text style={[defaultStyle.bodyText]}>Retain full control over your personal information.</Text>
+    </View>
+  </>
+)
+
+const Final = (
   <>
     <View style={{ alignItems: 'center' }}>
       <SecureImage {...imageDisplayOptions} />
     </View>
     <View style={{ marginLeft: 20, marginRight: 20, marginTop: 30 }}>
-      <Text style={[defaultStyle.headerText, { fontSize: 18 }]}>Ornare suspendisse sed nisi lacus</Text>
+      <Text style={[defaultStyle.headerText, { fontSize: 18 }]}>Take control of your information</Text>
       <Text style={[defaultStyle.bodyText, { marginTop: 20 }]}>
-        Enim facilisis gravida neque convallis a cras semper. Suscipit adipiscing bibendum est ultricies integer quis
-        auctor elit sed.
+        You have full control of what you share and when. Your information is never seen by anyone without your
+        permission, not even by the B.C. Government.
       </Text>
     </View>
-    <View style={{ marginTop: 'auto', marginBottom: 20 }}>
-      <TouchableHighlight
-        testID={'dismissButton'}
-        accessible={true}
+    <View style={[defaultStyle.point, { marginTop: 60 }]}>
+      <Info {...iconDisplayOptions} style={defaultStyle.icon} />
+      <TouchableOpacity onPress={() => Linking.openURL('https://example.com/')}>
+        <Text style={[defaultStyle.bodyText, { color: 'blue', textDecorationLine: 'underline' }]}>
+          Learn more about the BC Wallet
+        </Text>
+      </TouchableOpacity>
+      <ExternalLink {...smallIconDisplayOptions} style={[defaultStyle.icon, { marginLeft: 7 }]} />
+    </View>
+    <View style={{ marginTop: 'auto', marginBottom: 20, marginLeft: 20, marginRight: 20 }}>
+      <Button
+        title={'Get Started'}
         accessibilityLabel={'Get Started'}
-        style={[Buttons.primary, { marginLeft: 20, marginRight: 20 }]}
-        underlayColor={Colors.primaryActive}
-        onPress={getStartedTouched}
-      >
-        <Text style={Buttons.primaryText}>Get Started!</Text>
-      </TouchableHighlight>
+        onPress={onGetStartedTouched}
+        buttonType={ButtonType.Primary}
+      />
     </View>
   </>
 )
@@ -109,13 +159,13 @@ const CustomPageElement = (
 const guides: Array<{ image: React.FC<SvgProps>; title: string; body: string }> = [
   {
     image: CredentialList,
-    title: 'Lorem ipsum dolor sit amet',
-    body: 'Ipsum faucibus vitae aliquet nec ullamcorper sit amet risus.',
+    title: 'Store and secure credentials',
+    body: 'Your credentials are your digital cards and documents such as a drivers license. They are stored exclusively and securely on this device using advance blockchain technology. You can manage what credentials are stored.',
   },
   {
     image: ScanShare,
-    title: 'Excepteur sint occaecat ',
-    body: 'Mollis aliquam ut porttitor leo a diam sollicitudin tempor.',
+    title: 'Share only what is necessary',
+    body: "Share only what is needed to access a service or a product, online or in-person. For example, you won't need to show your full drivers license when asked to prove if you're of legal age. You can choose to only share proof that you are and all else stays private.",
   },
 ]
 
@@ -131,4 +181,8 @@ const createPageWith = (image: React.FC<SvgProps>, title: string, body: string)
   )
 }
 
-export const pages: Array<Element> = [...guides.map((g) => createPageWith(g.image, g.title, g.body)), CustomPageElement]
+export const pages: Array<Element> = [
+  CustomPageElement,
+  ...guides.map((g) => createPageWith(g.image, g.title, g.body)),
+  Final,
+]
