name: "CodeQL Analysis"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 12 * * 1"

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: AnalyzeX
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript
            build-mode: autobuild
            name: TypeScript/JavaScript
          - language: java
            build-mode: manual
            name: Java/Kotlin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended
          build-mode: ${{ matrix.build-mode }}

      - name: Set up JDK
        if: matrix.language == 'java' && ${{ matrix.build-mode == 'manual' }}
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # For Kotlin, we need to ensure the Gradle wrapper is executable
      - name: Make Gradle wrapper executable
        if: matrix.language == 'java' && ${{ matrix.build-mode == 'manual' }}
        run: |
          cd app/android
          chmod +x ./gradlew
        continue-on-error: false

      - name: Build Android (Java/Kotlin)
        if: matrix.language == 'java' && ${{ matrix.build-mode == 'manual' }}
        run: |
          cd app/android
          # Export CODEQL_EXTRACTOR_JAVA_BUILD_COMMAND to tell CodeQL to use our build command
          export CODEQL_EXTRACTOR_JAVA_BUILD_COMMAND="./gradlew assembleDebug"
          ./gradlew assembleDebug --no-daemon
        continue-on-error: false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
